{"version":3,"sources":["components/Post.js","services/user.service.js","components/common/Button.js","components/PostForm.js","components/Searchbar.js","components/Home.js","components/common/Layout.js","components/common/FormGroup.js","components/common/ButtonSpinner.js","utilities/functions.utilities.js","components/Login.js","components/SignUp.js","components/Profile.js","components/Favorites.js","components/Following.js","components/Reply.js","App.js","index.js","utilities/localStorage.utilities.js","services/auth.service.js","components/EditPost.js","components/UserProfile.js","services/post.service.js"],"names":["Post","props","useState","setFollows","exists","setExists","favorites","setFavorites","userFave","setUserFave","edit","setEdit","original","setOriginal","retweeted","setRetweeted","setRepost","numretweet","setNumretweet","disable","setDisable","currentUser","getCurrentUser","postInfo","post","favoritesComponent","useEffect","creator","followers","includes","id","favoritedBy","wasRepostedBy","repostedBy","isRepost","originalCreator","retweets","reposts","numFaves","retweet","a","retweetPost","body","hashtags","_id","username","unretweet","unretweetPost","parentPost","base64EncodedImage","length","undefined","profilePic","Buffer","from","img","data","toString","imageSrc","urlId","className","to","src","alt","label","handleClick","incrementFavorite","currentFav","decreaseFavorite","type","deletePost","pathname","state","onClick","replies","API_URL","process","REACT_APP_BACKEND_URL","getUserProfile","axios","get","followUser","otherUserId","put","unfollowUser","all","uploadImage","userId","console","log","formData","FormData","append","name","Button","passingProps","PostForm","setPost","onSubmit","e","split","forEach","word","charAt","push","replyToPost","newPost","value","onChange","postText","target","rows","placeholder","Searchbar","search","setSearch","users","setUsers","posts","setPosts","text","setText","preventDefault","then","response","user","toUpperCase","catch","err","viewAllPosts","postResults","currentPosts","postArr","i","searchQuery","map","result","Home","update","setUpdate","rerenderHome","postsFeed","reverse","index","isReply","Layout","showAdminBoard","setShowAdminBoard","setCurrentUser","roles","profUrl","aria-current","href","logout","children","FormGroup","htmlFor","slice","ButtonSpinner","loading","disabled","resMessage","error","message","required","role","Login","form","useRef","checkBtn","setUsername","password","setPassword","setLoading","setMessage","current","validateAll","context","_errors","login","history","window","location","reload","ref","validations","style","display","vusername","vpassword","vemail","isEmail","SignUp","email","setEmail","successful","setSuccessful","register","Profile","accessToken","substring","Favorites","favePosts","viewFavoritePosts","favesArray","favoritePosts","Following","numberOfPosts","setNumberOfPosts","following","setFollowing","followingPosts","viewFollowedPosts","followArray","followed","totalPosts","follower","followingFeed","Reply","idx","useParams","setMainPostUser","mainPost","setMainPost","repliesArray","setRepliesArray","viewOnePost","userReplies","reply","parentUser","App","exact","path","component","UserProfile","ReactDOM","render","document","getElementById","getItem","key","localStorage","JSON","parse","setItem","stringify","removeItem","EditPost","editPost","profile","setProfile","follows","setCurrent","userInfo","accept","handleImageUpload","multiple","follow","unfollow","info","checkFollow","curr","files","delete","parentId","repostId"],"mappings":"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","file":"static/js/main.26c1e371.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { getCurrentUser } from '../services/auth.service.js'\nimport { Link } from 'react-router-dom'\n\n\n//Component imports\nimport Button from './common/Button'\nimport EditPost from './EditPost'\n//import services\nimport { deletePost, replyToPost, incrementFavorite, decreaseFavorite, retweetPost, unretweetPost } from '../services/post.service.js'\n\n\nconst Post = (props) => {\n\n    const [follows, setFollows] = useState(null)\n    const [exists, setExists] = useState(true)\n    const [favorites, setFavorites] = useState(0)\n    const [userFave, setUserFave] = useState(false)\n    const [edit, setEdit] = useState(false)\n    //stores original posters username to display above body\n    const [original, setOriginal] = useState(null)\n    // checks to see if the post has been retweeted by current user\n    const [retweeted, setRetweeted] = useState(false)\n    // stores if a post is a repost\n    const [repost, setRepost] = useState(false)\n    // Number of retweets a post has\n    const [numretweet, setNumretweet] = useState(0)\n    // remove retweet button on click\n    const [disable, setDisable] = useState(false)\n\n    const currentUser = getCurrentUser()\n    let postInfo = props.post\n    let favoritesComponent = props.favoritesComponent\n\n    useEffect(() => {\n        if (currentUser && postInfo.creator[0].followers && postInfo.creator[0].followers.includes(currentUser.id)) {\n            setFollows(true)\n        } else {\n            setFollows(false)\n        }\n        if (currentUser && postInfo.favoritedBy.includes(currentUser.id)) {\n            setUserFave(true)\n        } else {\n            setUserFave(false)\n        }\n        if (currentUser && postInfo.wasRepostedBy.includes(currentUser.id)) {\n            setRetweeted(true)\n        }\n        else {\n            setRetweeted(false)\n        }\n        if (currentUser && postInfo.repostedBy.includes(currentUser.id)) {\n            setDisable(true)\n        }\n        if (currentUser && postInfo.isRepost) {\n            setOriginal(postInfo.originalCreator)\n            setRepost(true)\n        }\n        let retweets = postInfo.reposts\n        setNumretweet(retweets)\n        let numFaves = postInfo.favorites\n        setFavorites(numFaves)\n\n    }, [])\n\n    const editPost = () => {\n        setEdit(true)\n        setExists(false)\n    }\n\n    const deletePage = () => {\n        deletePost(postInfo._id)\n        setExists(false)\n    }\n\n    const retweet = async () => {\n        await retweetPost(currentUser.id, postInfo.body, postInfo.hashtags, postInfo._id, postInfo.creator[0].username)\n        setNumretweet(numretweet + 1)\n        setDisable(true)\n        // setRetweeted(true)\n        // props.rerenderHome()\n    }\n\n    const unretweet = async () => {\n        //sends the creator post info and post_id to backend to remove from array\n        await unretweetPost(currentUser.id, postInfo.parentPost, postInfo._id)\n        setNumretweet(numretweet - 1)\n        setRepost(false)\n        // props.rerenderHome()\n        setExists(false)\n    }\n\n    const favorite = () => {\n        incrementFavorite(postInfo._id, currentUser.id)\n        let currentFav = favorites\n        setUserFave(true)\n        setFavorites(currentFav + 1)\n        if (favoritesComponent) {\n            setExists(false)\n        }\n    }\n\n    const unfavorite = () => {\n        decreaseFavorite(postInfo._id, currentUser.id)\n        let currentFav = favorites\n        setUserFave(false)\n        setFavorites(currentFav - 1)\n        if (favoritesComponent) {\n            setExists(false)\n        }\n    }\n\n    const reply = () => {\n        setExists(true)\n    }\n    //if the profilePic field is not undefined then the pic imported by user is added as the base64EncodedImage to display\n    let base64EncodedImage = ''\n    if (postInfo.creator && postInfo.creator.length > 0\n        && postInfo.creator[0].profilePic !== undefined && postInfo.creator[0].profilePic.length > 0\n    ) {\n        base64EncodedImage = Buffer.from(postInfo.creator[0].profilePic[0].img.data.data).toString('base64')\n    }\n    const imageSrc = `data:image/jpeg;base64, ${base64EncodedImage}`\n\n    let urlId = '/userProfile/' + postInfo.creator[0]._id\n\n\n\n\n\n\n    return (\n\n        <div className=\"card w-100 p-0\">\n            {/* <div className=\"card-header\"> */}\n            {edit && (\n                <EditPost post={postInfo} />\n            )}\n\n            {exists && (\n                <div>\n                    {original && (\n                        <div className=\"card-header\">\n                            <strong>Re-posted from: {original}</strong>\n                        </div>\n                    )}\n                    <div className=\"card-body\">\n                        <div className=\"card-title\">\n                            <Link to={urlId}>\n                                {postInfo.creator[0].username}\n                            </Link>\n                            {base64EncodedImage &&\n                                (<img id=\"imagePlaceholder\" src={imageSrc} className=\"little-pic\" />)}\n                            {base64EncodedImage === '' &&\n                                (<img\n                                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                                    alt=\" profile-img img-thumbnail\"\n                                    className=\"little-pic\"\n                                />)}\n\n                        </div>\n\n                        <p className=\"card-text\">{postInfo.body}</p>\n\n                        <div className=\"row ps-4\">\n                            {(currentUser) &&\n                                <div >\n                                    {!userFave && (\n                                        <Button label=\"Favorite\" className=\"btn btn-primary\" handleClick={favorite} />\n                                    )}\n\n                                    {userFave && (\n                                        <Button label=\"Unfavorite\" className=\"btn btn-primary \" handleClick={unfavorite} />\n                                    )}\n\n                                    {retweeted && (\n                                        <Button label=\"Un-repost\" className=\"btn btn-primary\" handleClick={unretweet} />\n                                    )}\n\n                                    {(!retweeted && !disable) && (\n                                        <Button label=\"Repost\" className=\"btn btn-primary\" handleClick={retweet} />\n                                    )}\n                                </div>\n                            }\n                            {(currentUser && postInfo.creator[0]._id === currentUser.id) && (\n                                <div>\n                                    {/* {original && (\n                                            <div class=\"col-sm mt-3\">\n                                                <Button label=\"Un-retweet\" handleClick={unretweet} />\n                                            </div>\n                                        )} */}\n                                    {!original && (\n                                        <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n                                            <Button className=\"btn btn-primary\" type=\"button\" label=\"Delete\" handleClick={deletePage} />\n                                            <Button className=\"btn btn-primary\" type=\"button\" label=\"Edit\" handleClick={editPost} />\n                                        </div>\n                                    )}\n                                </div>\n                            )}\n\n\n                        </div>\n                    </div>\n\n                </div>)}\n            <div >\n                <div className=\"container .ps-2\">\n                    {exists && (\n                        <div className=\"card-body row  p-0\">\n                            <div className=\"col-sm p-2\">Favorites: {favorites}</div>\n                            {retweeted && (\n                                <div className=\"col-sm p-2\">Reposts: {numretweet}</div>\n                            )}\n                            <div className=\"col-sm p-2\">\n                                <Link\n                                    to={{\n                                        pathname: `/reply/${postInfo._id}`,\n                                        state: postInfo._id\n                                    }}\n                                    onClick={reply}\n                                >\n                                    {postInfo.replies.length} Replies\n                        </Link>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n\n\n\n        </div>\n\n    )\n}\n\nexport default Post\n\n","import axios from 'axios'\n//Helper funciton to get access to token for header\nimport authHeader from '../utilities/authHeader.utilities'\n\nconst API_URL= process.env.REACT_APP_BACKEND_URL\n\n// GET\t |   /api/test/all\t |\tretrieve public content\n// GET\t |  /api/test/user\t |\taccess User's content\n// GET\t | /api/test/admin\t |\taccess Admins content\n\nexport const getPublicContent = () => {\n    return axios.get(API_URL+ '/api/test/all')\n}\n\n//access User's content\nexport const getUserBoard = () => {\n    return axios.get(API_URL +'/api/test/user', {header: authHeader()})\n}\n\n//access Admins content\nexport const getAdminBoard = () => {\n    return axios.get(API_URL + '/api/test/admin', {header: authHeader()})\n}\n\n//get user profile\nexport const getUserProfile = (\n    id\n) => {\n    return axios.get(API_URL + '/api/user/profile/' + id)\n}\n\n//Follow a user\nexport const followUser = (\n    currentUser,\n    otherUserId\n) => {\n    return axios.put(API_URL + '/api/user/follow', {\n        currentUser,\n        otherUserId\n    })\n}\n\n\n//Unfollow a user\nexport const unfollowUser = (\n    currentUser,\n    otherUserId\n) => {\n    return axios.put(API_URL + '/api/user/unfollow', {\n        currentUser,\n        otherUserId\n    })\n}\n\n//View all users\nexport const all = () => {\n    return axios\n    .get(API_URL+\"/api/user/all\")\n}\n\n//Post new profilePic\nexport const uploadImage = ( userId, profilePic) => {\n    console.log(\"profilePic possibly in axios\", profilePic)\n    let formData = new FormData()\n    formData.append(\"profilePic\", profilePic, profilePic.name)\n    formData.append(\"userId\", userId)\n    console.log(\"formData\", formData)\n    return axios.post(API_URL + '/api/photo', \n        formData\n    )\n    \n}\n","import React from 'react'\n\nconst Button = (props) => {\n    let passingProps = props.label \n    \n    if(passingProps === 'Edit'){\n        passingProps = <i className=\"fas fa-edit\"></i> \n    }else if(passingProps === 'Delete'){\n        passingProps = <i className=\"fas fa-trash\"></i>\n    }\n\n    \n    return (\n        <button\n        className = {props.className}\n        onClick={props.handleClick}>{passingProps}</button>\n    )\n}\n\nexport default Button","import React, { useState } from 'react'\nimport { getCurrentUser } from '../services/auth.service.js'\nimport { newPost } from '../services/post.service.js'\nimport { replyToPost } from '../services/post.service'\n\nconst PostForm = (props) => {\n\n    const currentUser = getCurrentUser()\n    const [post, setPost] = useState(\"\")\n    let parentPost = props.parentPost\n\n    const onChangePost = (e) => {\n        const postText = e.target.value\n        setPost(postText)\n    }\n\n    const handlePost = (e) => {\n        const hashtags = []\n        // splits a post by space\n        let postArr = post.split(\" \")\n        // scans the post for hashtags and pushes into an array that we will send in post request\n        postArr.forEach(word => {\n            if (word.charAt(0) === '#') {\n                hashtags.push(word)\n            }\n        })\n        if (parentPost) {\n            replyToPost(currentUser.id, post, hashtags, parentPost)\n        } else {\n            newPost(currentUser.id, post, hashtags)\n        }\n    }\n\n    return (\n        <div>\n            {currentUser && (\n                <form onSubmit={handlePost}>\n                    <div className=\"w-60\">\n                        <textarea className=\"form-control\" value={post} onChange={onChangePost} rows=\"3\" placeholder=\"Write a post...\"></textarea>\n                        <button className=\"btn btn-primary\" type=\"submit\" value=\"Submit\"><i className=\"fas fa-pen\"></i></button>\n                        {/* <input type=\"submit\" value=\"Submit\" /> */}\n                    </div>\n\n                </form>\n\n            )}\n        </div>\n    )\n}\n\nexport default PostForm","\n//Component Imports\nimport Post from './Post'\nimport { viewAllPosts } from '../services/post.service.js'\nimport { all } from '../services/user.service.js'\n\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\n\n\n\nconst Searchbar = () => {\n    const [search, setSearch] = useState(\"\")\n    const [users, setUsers] = useState([])\n    const [posts, setPosts] = useState([])\n    const [text, setText] = useState(false)\n\n    //Update search state as user types\n    const onChangeSearch = (e) => {\n        const searchQuery = e.target.value\n        setSearch(searchQuery)\n        setUsers([])\n        setPosts([])\n        setText(false)\n    }\n\n    useEffect(() => {\n    }, [posts])\n\n    const handleSearch = (e) => {\n        setPosts([])\n        setText(true)\n        e.preventDefault()\n        //Need to use the input string to search for tweets and users\n        //Search for users first:\n        all()\n            .then(async (response) => {\n                const userResults = response.data\n                userResults.forEach((user) => {\n                    if ((user.username.toUpperCase() === search.toUpperCase()) && !text) {\n                        setUsers([user, ...users])\n                        console.log(users)\n                    }\n                })\n            }).catch(err => {\n                console.log(err)\n            })\n\n        //Search for tweets by hunting for results in tweet body\n        viewAllPosts()\n            .then((response) => {\n                //simple search, attempt to match full word regardless of case\n                // response.data.forEach(post => {\n                const postResults = response.data;\n                let currentPosts = posts\n                postResults.forEach((post) => {\n                    if (post.body) {\n                        let postArr = post.body.split(\" \");\n                        for (let i = 0; i < postArr.length; i++) {\n                            if ((search.toUpperCase() === postArr[i].toUpperCase()) && !text) {\n                                //render a Post component if it passes the search\n                                currentPosts.push(post)\n                            }\n                        }\n                        setPosts(currentPosts)\n\n                    }\n\n                });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    return (\n        <>\n\n            <form className=\"d-inline\" onSubmit={handleSearch}>\n                <div className=\"d-flex w-50\">\n                    <input type=\"text\" className=\"form-control\" value={search} onChange={onChangeSearch} placeholder=\"Search Chirper\" />\n                    <button className=\"btn btn-primary\" type=\"submit\"><i className=\"fas fa-search\"></i></button>\n                </div>\n                {/* <input type=\"submit\" value=\"Submit\" /> */}\n            </form>\n\n            <ul>\n                {users.map(result => {\n                    let urlId = '/userProfile/' + result._id\n                    return <Link to={urlId}>{result.username}</Link>\n                })}\n            </ul>\n            {\n                posts.map((post) => {\n                    console.log(post)\n                    return <Post key={post.id} post={post} />\n                })\n            }\n            {/* <Post post={posts[0]}/> */}\n        </>\n    )\n}\n\nexport default Searchbar","\nimport React, { useState, useEffect } from 'react'\nimport PostForm from \"./PostForm\"\nimport Searchbar from \"./Searchbar\"\nimport Post from \"./Post\"\nimport { viewAllPosts } from '../services/post.service.js'\n\n\nconst Home = (props) => {\n\n    const [posts, setPosts] = useState([])\n    const [update, setUpdate] = useState(0)\n\n\n    // set posts to render all posts\n    useEffect(() => {\n        viewAllPosts().\n            then((response) => {\n                setPosts(response.data)\n                // console.log(response)\n            }).catch(err => {\n                console.log(err)\n            })\n    }, [])\n\n    const rerenderHome = () => {\n        setUpdate(update + 1)\n    }\n\n\n    const postsFeed = posts.reverse().map((post, index) => {\n        if (post.isReply === false) {\n            return <Post key={post.id} post={post} rerenderHome={rerenderHome} />\n        }\n\n    })\n\n    return <div>\n        <h1 className=\"center-top\">Home Page</h1>\n        <PostForm />\n        <Searchbar />\n        {postsFeed}\n\n\n\n    </div>\n\n}\n\nexport default Home\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getCurrentUser,logout } from \"../../services/auth.service\";\n\n\nconst Layout = (props) => {\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\n  const [currentUser, setCurrentUser] = useState(undefined);\n\n\n  useEffect(() => {\n    // grab getCurrentuser from the auth service\n    const user =  getCurrentUser();\n\n    if (user) {\n      // Set current user to the currentUser state\n      setCurrentUser(user);\n\n      // Check if the user.roles has \"ROLE_ADMIN\" return either true or false\n      setShowAdminBoard(user.roles.includes(\"ROLE_ADMIN\"));\n    }\n  }, []);\n  \n  const logOut = () => {\n    logout()\n  }\n\n  \n  let profUrl = null\n\n  if (currentUser){\n    // console.log('/userProfile/' + currentUser.id)\n    profUrl = '/userProfile/' + currentUser.id\n  }\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand sticky-top navbar-dark bg-primary\">\n        <Link to=\"/\" className=\"navbar-brand\">\n        <strong>Chirper</strong>  \n        </Link>\n        <div className=\"navbar-nav nav-tabs mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/home\"} className=\"nav-link\">\n              Home\n            </Link>\n          </li>\n          {showAdminBoard && (\n            <li className=\"nav-item\">\n              <Link to={\"/admin\"} className=\"nav-link active\" aria-current=\"page\">\n                Admin Board\n              </Link>\n            </li>\n          )}\n          {currentUser && (\n            <li className=\"nav-item\">\n              <Link to={\"/following\"} className=\"nav-link\">\n                Following\n              </Link>\n            </li>\n          )}\n          {currentUser && (\n            <li className=\"nav-item\">\n              <Link to={\"/favorites\"} className=\"nav-link\">\n                Favorites\n              </Link>\n            </li>\n          )}\n          {currentUser && (\n            <li className=\"nav-item\">\n              <Link to={profUrl} className=\"nav-link\">\n               {currentUser.username}'s Profile\n              </Link>\n            </li>\n          )}\n        </div>\n        \n        {currentUser ? (\n          <div className=\"navbar-nav ml-auto\">\n            {/* <li className=\"nav-item\">\n              <Link to={\"/profile\"} className=\"nav-link\">\n                {currentUser.username}\n              </Link>\n            </li> */}\n            <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                  Logout\n                </a>\n              </li>\n          </div>\n        ) : (\n          <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                  <Link to={\"/login\"} className=\"nav-link\">\n                      Login\n                  </Link>\n              </li>\n              <li className=\"nav-item\">\n                  <Link to={'/register'} className=\"nav-link\">\n                  Sign Up\n                  </Link>\n              </li>\n          </div>\n        )}\n      </nav>\n      <div className=\"container mt-3\">{props.children}</div>\n    </div>\n  );\n};\nexport default Layout;","import React from 'react'\n\nconst FormGroup = ({ children, text }) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={text}>{text.slice(0, 1).toUpperCase() + text.slice(1, text.length)}</label>\n            {children}\n        </div>\n    )\n}\n\nexport default FormGroup","//rafce for extension\n\nimport React from 'react'\n\nconst ButtonSpinner = ({ loading, text }) => {\n    return (\n        <div className=\"form-group\">\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\n                {loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>{text}</span>\n            </button>\n        </div>\n    )\n}\n\nexport default ButtonSpinner","//takes res error and returns it into a readable format\nexport const resMessage = (error) => {\n   return(\n   (error.response && \n        error.response.data && \n        error.response.data.message) || \n        error.message || \n        error.toString\n        )\n}\n\n//main point to store functions that can be used everywhere","import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\n//Component\nimport FormGroup from './common/FormGroup'\nimport ButtonSpinner from './common/ButtonSpinner'\n\n//Helper\nimport { login } from '../services/auth.service'\nimport { resMessage } from '../utilities/functions.utilities'\n\n\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        )\n    }\n}\n\n\nconst Login = (props) => {\n    const form = useRef()\n    const checkBtn = useRef()\n\n    //\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [message, setMessage] = useState(\"\")\n\n    //grab what is entered as our username\n    const onChangeUsername = (e) => {\n        const username = e.target.value\n        setUsername(username)\n    }\n\n    //Store the password in our password state\n    const onChangePassword = (e) => {\n        const password = e.target.value\n        setPassword(password)\n    }\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n\n        setMessage(\"\")\n        setLoading(true)\n        //validates all the fields\n        form.current.validateAll()\n        //validator stores errors and we can check if errors exist\n        if (checkBtn.current.context._errors.length === 0) {\n            login(username, password).then(\n                () => {\n                    props.history.push(\"/home\")\n                    window.location.reload()\n                },\n                (error) => {\n                    //Setting loading to false and return the error\n                    setLoading(false)\n                    //checking all the data received from our backend\n                    setMessage(resMessage(error))\n                }\n            )\n        } else {\n            setLoading(false)\n        }\n\n    }\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"card card-container\">\n\n                <Form onSubmit={handleLogin} ref={form}>\n                    <FormGroup text=\"username\">\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"username\"\n                            value={username}\n                            onChange={onChangeUsername}\n                            validations={[required]}\n                        />\n                    </ FormGroup>\n\n                    <FormGroup text=\"password\">\n                        <Input\n                            type=\"password\"\n                            className=\"form-control\"\n                            name=\"password\"\n                            value={password}\n                            onChange={onChangePassword}\n                            validations={[required]}\n                        />\n                    </FormGroup>\n\n                    <ButtonSpinner text=\"Login\" login={loading} />\n\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className=\"alert alert-danger\" role=\"alert\">\n                                {message}\n                            </div>\n                        </div>\n                    )}\n                    {/*needs to be used for react validation to submit the form */}\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default Login","import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\"\n\n//Component\nimport FormGroup from './common/FormGroup'\nimport ButtonSpinner from './common/ButtonSpinner'\n\n//Helper\nimport { register } from '../services/auth.service'\nimport {resMessage} from '../utilities/functions.utilities'\n\nimport {login} from '../services/auth.service'\n\n\n\n//Function given to react-validator\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        )\n    }\n}\n\n//Function validates username\nconst vusername = (value) => {\n    if (value.length <= 3 || value.length >= 20) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The username must be between 3 and 20 characters.\n            </div>\n        )\n    }\n}\n\n//Functions that validates password\nconst vpassword = (value) => {\n    if(value.length < 6 || value.length >= 40) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The password must be between 6 and 40 characters.\n            </div>\n        )\n    }\n}\n\n//Function that validates email and checks if it is in the correct format\nconst vemail = (value) => {\n    if(!isEmail(value)){\n        return(\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This is not a valid email.\n            </div>\n        )\n    }\n}\n\n\nconst SignUp = (props) => {\n    const form = useRef()\n    const checkBtn = useRef()\n\n    //\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [successful, setSuccessful] = useState(false)\n    const [message, setMessage] = useState(\"\")\n\n    //grab what is entered as our username\n    const onChangeUsername = (e) => {\n        const username = e.target.value\n        setUsername(username)\n    }\n\n    //Store the password in our password state\n    const onChangePassword = (e) => {\n        const password = e.target.value\n        setPassword(password)\n    }\n\n    //Store the password in our password state\n    const onChangeEmail = (e) => {\n    const email = e.target.value\n        setEmail(email)\n    }\n\n    const handleSignup = (e) => {\n        e.preventDefault()\n\n        setMessage(\"\")\n        setSuccessful(false)\n\n        //validates all the fields\n        form.current.validateAll()\n\n        //validator stores errors and we can check if errors exist\n        if(checkBtn.current.context._errors.length === 0){\n            register(username, email, password).then(\n                (response) => {\n                    setMessage(response.data.message)\n                    setSuccessful(true)\n                    \n                    //if successful, login the new user and redirect to home page\n                    login(username, password).then(\n                        () => {\n                            props.history.push(\"/home\")\n                            window.location.reload()\n                        }\n                    )\n                },\n                (error) => {\n                    setMessage(resMessage(error))\n                    setSuccessful(false)\n                }\n            )\n        }\n    }\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"card card-container\">\n\n                <Form onSubmit={handleSignup} ref={form}>\n                    <FormGroup text=\"username\">\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"username\"\n                            value={username}\n                            onChange={onChangeUsername}\n                            validations={[required, vusername]}\n                        />\n                    </FormGroup>\n                    <FormGroup text=\"email\">\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"email\"\n                            value={email}\n                            onChange={onChangeEmail}\n                            validations={[required, vemail]}\n                        />\n                    </FormGroup>\n                    <FormGroup text=\"password\">\n                        <Input\n                            type=\"password\"\n                            className=\"form-control\"\n                            name=\"password\"\n                            value={password}\n                            onChange={onChangePassword}\n                            validations={[required, vpassword]}\n                        />\n                    </FormGroup>\n                    <ButtonSpinner text=\"Sign Up\" />\n\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className={successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\n                                {message}\n                            </div>\n                        </div>\n                    )}\n\n                    {/*needs to be used for react validation to submit the form */}\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default SignUp","import React from 'react'\nimport { getCurrentUser } from '../services/auth.service'\n\nconst Profile = () => {\n    const currentUser = getCurrentUser()\n\n    return (\n        <div className=\"container\">\n            <header className=\"jumbotron\">\n                <h3>\n                    <strong>{currentUser.username}</strong>\n                </h3>\n            </header>\n            <p>\n                <strong>Token:</strong>{currentUser.accessToken.substring(0, 20)}...{\" \"}\n            </p>\n            <p>\n                <strong>Id: </strong>{currentUser.id}\n            </p>\n            <p>\n                <strong>Email: </strong>{currentUser.email}\n            </p>\n            {/* if current user has roles map through those roles */}\n            {currentUser.roles &&\n                currentUser.roles.map((role, index) => <li key={index}>{role}</li>)\n            }\n        </div>\n    )\n}\n\nexport default Profile","import React, { useEffect, useState } from 'react'\n\n//Component imports\nimport Post from \"./Post\"\n//Helper\nimport { viewFavoritePosts } from '../services/post.service'\nimport { getCurrentUser } from '../services/auth.service'\n\n\nconst Favorites = () => {\n\n    const [favorites, setFavorites] = useState([])\n    const [exists, setExists] = useState(true)\n    const currentUser = getCurrentUser()\n    const id = currentUser.id\n\n    useEffect(() => {\n        favePosts()\n        setExists(false)\n    }, [])\n\n\n    const favePosts = () => {\n        viewFavoritePosts(id).then(user => {\n            let favesArray = user.data.favoritePosts\n            setFavorites(favesArray)\n            // console.log(favesArray)\n            return favesArray\n\n        })\n    }\n    const postsFeed = favorites.reverse().map((posts, index) => {\n        return <Post key={posts.id} post={posts} favoritesComponent={true} />\n    })\n\n\n    return (\n        <div>\n            <h1 className=\"center-top\">Favorites</h1>\n\n            <div>{postsFeed}</div>\n\n        </div>\n    )\n\n}\n\nexport default Favorites","import React, { useEffect, useState } from 'react'\nimport Post from \"./Post\"\n//import getCurrentUser to grab user ID\nimport { getCurrentUser } from '../services/auth.service.js'\n//import service displaying posts from users a user follows\nimport { viewFollowedPosts } from '../services/post.service.js'\n//import spinner\n\n\nconst Following = () => {\n    const [numberOfPosts, setNumberOfPosts] = useState(0)\n    const [following, setFollowing] = useState([])\n    const [exists, setExists] = useState(true)\n    const currentUser = getCurrentUser()\n    const id = currentUser.id\n\n\n    useEffect(() => {\n        followingPosts()\n        setExists(false)\n    }, [])\n\n\n    const followingPosts = () => {\n        viewFollowedPosts(id).then(user => {\n            let followArray = user.data.followed\n            setFollowing(followArray)\n            let totalPosts = 0\n            followArray.map((follower, index) => {\n                totalPosts += follower.posts.length\n            })\n            setNumberOfPosts(totalPosts)\n            return followArray\n\n        })\n    }\n    const followingFeed = following.reverse().map((follower, index) => {\n        return follower.posts.map((post, index) => {\n            return <Post key={post.id} post={post} />\n        })\n\n    })\n\n    return (\n        <>\n            <div>\n                <h1 className=\"center-top\">Following Feed</h1>\n                <small className=\"center-top text-muted\"> {numberOfPosts} posts from users you follow </small>\n            </div>\n            <div>\n\n                {followingFeed}\n            </div>\n        </>\n    )\n\n}\n\nexport default Following","import React, { useState, useEffect } from 'react'\n\n\nimport Post from \"./Post\"\nimport PostForm from \"./PostForm\"\nimport { getCurrentUser } from '../services/auth.service'\nimport { viewOnePost } from '../services/post.service'\nimport { useParams } from \"react-router\";\n\n\nconst Reply = () => {\n    const { idx } = useParams()\n    const [mainPostUser, setMainPostUser] = useState(\"\")\n    const [mainPost, setMainPost] = useState([])\n    const [repliesArray, setRepliesArray] = useState([])\n    const currentUser = getCurrentUser(\"\")\n\n\n\n    const getParentPost = () => {\n        viewOnePost(idx)\n            .then((response) => {\n                const parentPost = response.data.map(post => {\n                    const parentUser = getCurrentUser(post.creator)\n                    setMainPostUser(parentUser)\n                    return <Post key={post._id} post={post} />\n                })\n\n                setMainPost(parentPost)\n\n            })\n\n    }\n\n    const getRepliesArray = () => {\n        viewOnePost(idx)\n            .then((response) => {\n                console.log(\"reply response\", response)\n                // setMainPost(response.data[0]._id)\n                const userReplies = response.data[0].replies.reverse().map((reply, index) => {\n                    console.log(\"reply\", reply)\n\n                    return <Post key={reply._id} post={reply} />\n                })\n                setRepliesArray(userReplies)\n            })\n    }\n\n    useEffect(() => {\n        getRepliesArray()\n        getParentPost()\n\n    }, [])\n\n\n    return (\n        <div>\n\n            <div>\n                <h2 className=\"center-top\">Main Post</h2>\n                {mainPost}\n            </div>\n            <PostForm parentPost={idx} />\n            <div>\n                <h2 className=\"center-top\">Replies</h2>\n\n                {repliesArray}\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Reply","import {Switch, Route} from 'react-router-dom'\n\n//Components\nimport Home from \"./components/Home\";\n\n//High Order Component\nimport Layout from './components/common/Layout'\nimport Login from './components/Login'\nimport SignUp from './components/SignUp'\nimport Profile from './components/Profile'\nimport UserProfile from './components/UserProfile'\nimport Favorites from './components/Favorites'\nimport Following from './components/Following'\nimport Reply from './components/Reply'\n//CSS imports\nimport \"./css/App.css\";\n\nconst App = ()=> {\n    return (\n      <Layout>\n      <Switch>\n        <Route exact path ={[\"/\", \"/home\"]} component={Home}/>\n        <Route exact path =\"/login\" component={Login} />\n        <Route exact path =\"/register\" component={SignUp}/>\n        <Route exact path =\"/profile\" component={Profile} />\n        <Route exact path =\"/userProfile/:id\" component={UserProfile}/>\n        <Route exact path =\"/favorites\" component={Favorites}/>\n        <Route exact path =\"/following\" component={Following} />\n        <Route exact path =\"/reply/:idx\" component={Reply} />\n      </Switch>\n      </Layout>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nimport App from './App';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './css/index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n","//get items from local storage\nexport const getItem =(key)=>{\n    if(localStorage.getItem(key)){\n        return JSON.parse(localStorage.getItem(key))\n    }\n    return null;\n}\n\n//Set items from local storage\nexport const setItem = (key, data)=> {\n    return localStorage.setItem(key, JSON.stringify(data))\n}\n\n//Remove items from local storage\nexport const removeItem = (key)=> {\n    return localStorage.removeItem(key)\n}","import axios from 'axios';\n\nimport {setItem, getItem, removeItem} from '../utilities/localStorage.utilities'\n\nconst API_URL=process.env.REACT_APP_BACKEND_URL\n//function to register User\nexport const register =(username, email, password) => {\n    return axios\n    .post(API_URL+\"/api/auth/signup\", {\n        username,\n        email,\n        password\n    })\n}\n\n//Login the user\nexport const login = (username, password) => {\n    return axios\n    .post(API_URL+\"/api/auth/signin\", {\n        username,\n        password\n    })\n    .then((response)=>{\n        //Check if the response of user has accessToken\n        if(response.data.accessToken){\n            setItem('user', response.data)\n        }\n        return response.data\n    })\n}\n\n//logout the user\nexport const logout = () => {\n    removeItem('user')\n}\n\n//get current user\nexport const getCurrentUser = () => {\n    return getItem('user')\n}\n\n","import React, { useState, useEffect } from 'react'\n\nimport { getCurrentUser } from '../services/auth.service.js'\n\nimport { editPost } from '../services/post.service.js'\n\n\nconst EditPost = (props) => {\n\n    const currentUser = getCurrentUser()\n    const [post, setPost] = useState(\"\")\n\n    useEffect(() => {\n        setPost(props.post.body)\n    }, [])\n\n    const onChangePost = (e) => {\n        console.log(props.post._id, post)\n        setPost(e.target.value)\n    }\n\n    const handlePost = (e) => {\n\n        editPost(props.post._id, post)\n    }\n\n    return (\n        <div>\n            {(currentUser) && (\n                <form onSubmit={handlePost}>\n                    <label>\n                        Edit:\n            <input type=\"text\" value={post} onChange={onChangePost} />\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n\n            )}\n        </div>\n    )\n}\n\nexport default EditPost","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Button from './common/Button'\n\n//Helper\nimport { getUserProfile } from '../services/user.service'\nimport { getCurrentUser } from '../services/auth.service'\nimport Post from './Post'\nimport { useParams } from \"react-router\";\nimport { followUser, unfollowUser } from '../services/user.service.js'\nimport { uploadImage } from '../services/user.service.js'\n\n\n\n\nconst UserProfile = (props) => {\n    const currentUser = getCurrentUser(\"\")\n    const [profile, setProfile] = useState([])\n    const [follows, setFollows] = useState(false)\n    const [current, setCurrent] = useState(false)\n\n    const { id } = useParams()\n\n    useEffect(() => {\n        userProfile()\n        checkFollow()\n    }, [follows])\n\n    const follow = () => {\n        followUser(currentUser.id, id)\n        setFollows(true)\n    }\n\n    const unfollow = () => {\n        unfollowUser(currentUser.id, id)\n        setFollows(false)\n    }\n\n    const checkFollow = async () => {\n        let curr = await (await getUserProfile(id)).data.followers\n        // console.log(currentUser.id)\n        for (let i = 0; i < curr.length; i++) {\n            // console.log(curr[i].followers)\n            if (curr[i].followers.includes(currentUser.id)) {\n                setFollows(true)\n                // console.log(\"Follows: \", follows)\n            }\n        }\n    }\n\n    const handleImageUpload = (e) => {\n        const file = e.target.files\n        let formData = new FormData()\n        uploadImage(id, e.target.files[0])\n        // formData.append(\"userPhoto\", file)\n        console.log(\"files for pic?\", e.target.files[0])\n\n    }\n\n\n    function userProfile() {\n        return getUserProfile(id).then(user => {\n            const userInfo = user.data\n            // console.log(\"Ids: \", userInfo._id, currentUser.id)\n            if (userInfo._id === currentUser.id) {\n                setCurrent(true)\n            }\n            // console.log(user)\n            let base64EncodedImage = ''\n            if (user.data.profilePic !== undefined && user.data.profilePic.length > 0) {\n                base64EncodedImage = Buffer.from(user.data.profilePic[0].img.data.data).toString('base64')\n            }\n            const imageSrc = `data:image/jpeg;base64, ${base64EncodedImage}`\n\n            return (\n                <div className=\"container\">\n\n                    <div className=\"card\">\n                        <div>\n                            <h2 className=\"center-top nav-link\">\n                                <strong>User Information</strong>\n                            </h2>\n                            <h3>\n                                <strong className=\"nav-link\">{userInfo.username}</strong>\n                            </h3>\n                        </div>\n                        <div>\n                            {base64EncodedImage &&\n                                (<img id=\"imagePlaceholder\" src={imageSrc} className=\"user-profile float-left\" />)}\n                            {base64EncodedImage === '' &&\n                                (<img\n                                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                                    alt=\"profile-img\"\n                                    className=\"nav-link\"\n                                />)}\n                        {current === true && (\n                            <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} multiple={false} />\n                        )} \n                        </div>\n\n                        \n\n                        <div>\n                            <Link to={\"/favorites\"} className=\"nav-link\">Favorite Posts</Link>\n                        </div>\n\n                        <div>\n                            <Link to={\"/following\"} className=\"nav-link\">Following Feed</Link>\n                        </div>\n\n                        <div className=\"nav-link\">\n                            {!follows && (\n                                <Button label=\"Follow\" handleClick={follow} className=\"btn btn-primary mt-4\" />\n                            )}\n\n                            {follows && (\n                                <Button label=\"Unfollow\" handleClick={unfollow} className=\"btn btn-danger mt-4\" />\n                            )}\n                        </div>\n                    </div>\n\n                    <div className=\"card\">\n                        <h4 className=\"nav-link\">\n                            <strong>Currently Following</strong>\n                        </h4>\n\n                        {userInfo.followed.map((followed, index) => {\n                            if (followed === null) {\n                                return <div className=\"nav-link\">You are not following anyone yet.</div>\n\n                            } else {\n                                return <ul className=\"list-unstyled\">\n                                    <li className=\"nav-link\" key={followed._id}>{followed.username}</li>\n                                    {/* return <Post post={post} /> */}\n                                </ul>\n\n                            }\n\n                        })}\n                    </div>\n                    <div className=\"card\">\n                        <h4 className=\"nav-link\">\n                            <strong>Current Followers</strong>\n                        </h4>\n                        {userInfo.followers.map((followers, index) => {\n                            {/* {console.log(followers)} */ }\n                            if (followers.length === 0) {\n                                return <div className=\"nav-link\">You have no followers yet.</div>\n                            } else {\n                                return <div>\n                                    <ul className=\"list-unstyled\">\n                                        <li className=\"nav-link\" key={followers._id}>{followers.username}</li>\n                                        {/* // return <Post post={post} /> */}\n                                    </ul>\n                                </div>\n                            }\n                        })}\n                    </div>\n                    <div className=\"card\">\n                        <h4 className=\"nav-link\">\n                            <strong>Posts</strong>\n                        </h4>\n\n                        {userInfo.posts.map((post, index) => {\n                            {/* {console.log(post)} */ }\n                            return <Post key={post.id} post={post} />\n\n\n                        })}\n                    </div>\n                    {/* Links to followed, follows, favorites */}\n                </div>\n            )\n\n        }).then(info => {\n            setProfile(info)\n        })\n    }\n\n    if (follows === null) {\n        return null\n    }\n\n    return <div>\n        <div>\n            {profile}\n        </div>\n\n\n\n    </div>\n}\n\nexport default UserProfile\n\n","import axios from 'axios'\n\n\nconst API_URL=process.env.REACT_APP_BACKEND_URL\n\n//create a new post\nexport const newPost = (\n    creator,\n    body,\n    hashtags,\n) => {\n    return axios\n    .post(API_URL+\"/api/posts/post\", {\n        creator,\n        body,\n        hashtags\n    })\n}\n\n//edit an existing post\nexport const editPost = (\n    id,\n    body\n) => {\n    return axios\n    .put(API_URL+\"/api/posts/post\", {\n        id,\n        body\n    })\n}\n\n//delete a post\nexport const deletePost = (\n    _id\n) => {\n    console.log(\"this should be the id for axios\", _id)\n    return axios\n    .delete(API_URL+\"/api/posts/post\", {\n        data: {\n            _id: _id\n        }\n       \n    })\n}\n\n//retweet a post\nexport const retweetPost = (\n    creator,\n    body,\n    hashtags,\n    parentPost,\n    originalCreator\n) => {\n    return axios\n    .post(API_URL+\"/api/posts/retweet\", {\n        creator,\n        body,\n        hashtags,\n        parentPost,\n        originalCreator\n    })\n}\n\n//unretweet a post\nexport const unretweetPost = (\n    userId,\n    parentId,\n    repostId\n) => {\n    console.log('userId:', userId, 'parentId:', parentId, 'repostId:', repostId)\n    return axios\n    .put(API_URL+\"/api/posts/unretweet\", {\n        userId,\n        parentId,\n        repostId\n    })\n}\n\n//reply to a post\nexport const replyToPost = (\n    creator,\n    body,\n    hashtags,\n    parentPost\n) => {\n    return axios\n    .post(API_URL+\"/api/posts/reply\", {\n        creator,\n        body,\n        hashtags,\n        parentPost\n    })\n}\n\n//view favorited posts\nexport const viewFavoritePosts = (\n    id\n) => {\n    return axios\n    .get(API_URL+\"/api/posts/feed/favorites/\"+id)\n}\n\n//view posts from followed users\nexport const viewFollowedPosts = (\n    id\n) => {\n    return axios\n    .get(API_URL+\"/api/posts/feed/\"+id)\n}\n\n//view all posts\nexport const viewAllPosts = () => {\n    return axios\n    .get(API_URL+\"/api/posts/feed\")\n}\n\n//view one post\nexport const viewOnePost = (\n    idx\n) => {\n    return axios\n    .get(API_URL+\"/api/posts/\" +idx) \n}\n\n//increment favorite count of a post\nexport const incrementFavorite = (\n    id,\n    userId\n) => {\n    return axios\n    .put(API_URL+\"/api/posts/favorite\", {\n        id,\n        userId\n    })\n}\n\n//decrease favorites and remove user from post doc\nexport const decreaseFavorite = (\n    id,\n    userId\n) => {\n    return axios\n    .put(API_URL+\"/api/posts/decreaseFave\", {\n        id,\n        userId\n    })\n}"],"sourceRoot":""}